<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Liste des Réclamations</title>
    <style>
        body {
            font-family: 'Helvetica', Arial, sans-serif;
            margin: 20px;
            line-height: 1.4;
            color: #333;
            position: relative;
        }
        .header {
            text-align: center;
            margin-bottom: 20px;
            border-bottom: 3px solid #4e73df;
            padding-bottom: 10px;
            position: relative;
        }
        .company-name {
            font-size: 32px;
            font-weight: bold;
            color: #b96b45;
            letter-spacing: 2px;
            margin-bottom: 5px;
            text-transform: uppercase;
        }
        .tagline {
            font-size: 14px;
            color: #666;
            margin-top: 5px;
            font-style: italic;
        }
        h1 {
            color: #4e73df;
            text-align: center;
            margin: 25px 0;
            font-size: 24px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #4e73df;
            color: white;
            font-weight: bold;
            font-size: 14px;
            text-transform: uppercase;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        tr:hover {
            background-color: #f1f1f1;
        }
        .footer {
            text-align: center;
            margin-top: 20px;
            padding-top: 15px;
            font-size: 11px;
            color: #666;
            border-top: 1px solid #ddd;
        }
        .description {
            margin-bottom: 20px;
            color: #555;
            line-height: 1.4;
            text-align: justify;
            background-color: #f8f9fa;
            padding: 12px;
            border-radius: 5px;
            border-left: 5px solid #4e73df;
        }
        .status-pending {
            color: #f6c23e;
            font-weight: bold;
        }
        .status-resolved {
            color: #1cc88a;
            font-weight: bold;
        }
        .status-rejected {
            color: #e74a3b;
            font-weight: bold;
        }
        .logo-container {
            text-align: center;
            margin-bottom: 15px;
        }
        .logo-placeholder {
            display: inline-block;
            width: 80px;
            height: 80px;
            background-color: #b96b45;
            position: relative;
            border-radius: 10px;
            margin: 0 auto;
        }
        .logo-s-shape {
            position: absolute;
            top: 16px;
            left: 16px;
            width: 48px;
            height: 48px;
            border-top: 12px solid white;
            border-left: 12px solid white;
            transform: rotate(135deg);
        }
        .doc-title {
            display: inline-block;
            padding: 8px 20px;
            background-color: #4e73df;
            color: white;
            font-weight: bold;
            border-radius: 20px;
            margin-bottom: 20px;
        }
        .stats-dashboard {
            background: linear-gradient(135deg, #f8f9fc 0%, #ffffff 100%);
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.05);
            margin: 20px 0;
        }
        .stats-header {
            text-align: center;
            margin-bottom: 20px;
            position: relative;
            padding-bottom: 10px;
        }
        .stats-header:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: linear-gradient(90deg, #4e73df, #36b9cc);
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }
        .stat-card {
            background: white;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
            text-align: center;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        .stat-card:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: #4e73df;
        }
        .stat-card.success:before { background: #1cc88a; }
        .stat-card.warning:before { background: #f6c23e; }
        .stat-card.danger:before { background: #e74a3b; }
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }
        .stat-card .number {
            font-size: 28px;
            font-weight: 700;
            background: linear-gradient(45deg, #4e73df, #224abe);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin: 10px 0;
        }
        .stat-card.success .number {
            background: linear-gradient(45deg, #1cc88a, #13855c);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        .stat-card.warning .number {
            background: linear-gradient(45deg, #f6c23e, #dda20a);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        .stat-card.danger .number {
            background: linear-gradient(45deg, #e74a3b, #be2617);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        .stat-card .label {
            color: #5a5c69;
            font-size: 16px;
            font-weight: 500;
        }
        .charts-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }
        .chart-container {
            background: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
            position: relative;
        }
        .chart-container.large {
            height: 300px;
        }
        .chart-container.medium {
            height: 250px;
        }
        .charts-row {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
            margin-top: 20px;
        }
        @media (max-width: 768px) {
            .charts-row {
                grid-template-columns: 1fr;
            }
        }
        .page-number {
            position: fixed;
            bottom: 20px;
            right: 20px;
            font-size: 11px;
            color: #666;
        }
        .page-break {
            page-break-after: always;
        }
        @page {
            margin: 20px;
            size: A4;
        }
        @media print {
            body {
                margin: 0;
                padding: 15px;
            }
            .stats-dashboard {
                break-inside: avoid;
            }
            .charts-grid {
                break-inside: avoid;
            }
            table {
                break-inside: auto;
            }
            tr {
                break-inside: avoid;
                break-after: auto;
            }
            .page-number:after {
                content: counter(page);
            }
            thead {
                display: table-header-group;
            }
            tfoot {
                display: table-footer-group;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo-container">
            <div class="logo-placeholder">
                <div class="logo-s-shape"></div>
            </div>
        </div>
        <div class="company-name">TREKSWAP</div>
        <div class="tagline">Votre plateforme de voyages et d'échanges</div>
    </div>

    <span class="doc-title">RAPPORT DE GESTION</span>
    <h1>Liste des Réclamations</h1>
    
    <div class="description">
        <strong>Rapport de suivi des réclamations</strong> - Ce document présente l'ensemble des réclamations enregistrées sur la plateforme TrekSwap.
        Les informations comprennent la description, la date, le type et l'état actuel de chaque réclamation.
        Document à usage interne pour le service client et la direction.
    </div>
    
    <div class="stats-dashboard">
        <div class="stats-header">
            <h2 style="color: #4e73df; font-size: 28px; margin-bottom: 10px;">Tableau de Bord des Réclamations</h2>
            <p style="color: #858796; font-size: 16px;">Vue d'ensemble et analyse détaillée</p>
        </div>
    </div>
    <div class="advanced-stats">
        <h2>Statistiques détaillées</h2>
        
        <div class="stat-section">
            <h3>Répartition par type</h3>
            <table class="stat-table">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Nombre</th>
                        <th>Pourcentage</th>
                    </tr>
                </thead>
                <tbody>
                    {% for type, count in stats.parType %}
                    <tr>
                        <td>{{ type }}</td>
                        <td>{{ count }}</td>
                        <td>{{ ((count / stats.total) * 100)|round }}%</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="stat-section">
            <h3>Évolution mensuelle (6 derniers mois)</h3>
            <table class="stat-table">
                <thead>
                    <tr>
                        <th>Mois</th>
                        <th>Nombre</th>
                    </tr>
                </thead>
                <tbody>
                    {% for month, count in stats.parMois %}
                    <tr>
                        <td>{{ month }}</td>
                        <td>{{ count }}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="stat-section">
            <h3>Performance de résolution</h3>
            <div class="performance-stats">
                <div class="performance-item">
                    <span class="label">Taux de résolution:</span>
                    <span class="value">{{ stats.resolutionRate }}%</span>
                </div>
                <div class="performance-item">
                    <span class="label">Réclamations du mois:</span>
                    <span class="value">{{ stats.moisActuel }}</span>
                </div>
            </div>
        </div>
    </div>
    
    <table>
        <thead>
            <tr>
                <th style="width: 40%">Description</th>
                <th style="width: 15%">Date</th>
                <th style="width: 15%">Type</th>
                <th style="width: 10%">État</th>
            </tr>
        </thead>
        <tbody>
            {% for reclamation in reclamations %}
                {% if loop.index is divisible by(20) %}
                    </tbody>
                    </table>
                    <div class="page-break"></div>
                    <table>
                    <thead>
                        <tr>
                            <th style="width: 40%">Description</th>
                            <th style="width: 15%">Date</th>
                            <th style="width: 15%">Type</th>
                            <th style="width: 10%">État</th>
                        </tr>
                    </thead>
                    <tbody>
                {% endif %}
                <tr>
                    <td>{{ reclamation.descriptionRec }}</td>
                    <td>{{ reclamation.dateRec ? reclamation.dateRec|date('d/m/Y H:i') : '' }}</td>
                    <td>{{ reclamation.typeRec }}</td>
                    <td class="status-{% if reclamation.etatRec == 'En cours' %}pending{% elseif reclamation.etatRec == 'Résolue' %}resolved{% else %}rejected{% endif %}">
                        {{ reclamation.etatRec }}
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="4" style="text-align: center;">Aucune réclamation trouvée</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
    
    <div class="footer">
        <p>Document généré le {{ "now"|date("d/m/Y à H:i") }}</p>
        <p>TrekSwap - Gestion des Réclamations - Confidentiel</p>
        <p>&copy; {{ "now"|date("Y") }} TrekSwap. Tous droits réservés.</p>
    </div>
    
    <div class="page-number">Page <span class="current-page"></span></div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Configuration des couleurs et styles communs
        const colors = {
            primary: '#4e73df',
            success: '#1cc88a',
            warning: '#f6c23e',
            danger: '#e74a3b',
            gray: '#858796'
        };

        const commonOptions = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    labels: {
                        font: {
                            family: "'Helvetica', 'Arial', sans-serif",
                            size: 12
                        }
                    }
                }
            }
        };

        // Données pour le graphique combiné
        const combinedData = {
            labels: [{% for month, count in stats.parMois %}'{{ month }}',{% endfor %}],
            datasets: [
                {
                    label: 'Réclamations mensuelles',
                    data: [{% for month, count in stats.parMois %}{{ count }},{% endfor %}],
                    type: 'line',
                    borderColor: colors.primary,
                    backgroundColor: 'rgba(78, 115, 223, 0.1)',
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4
                },
                {
                    label: 'Tendance',
                    data: [{% for month, count in stats.parMois %}{{ count }},{% endfor %}],
                    type: 'line',
                    borderColor: colors.success,
                    borderWidth: 2,
                    borderDash: [5, 5],
                    fill: false,
                    tension: 0.4
                }
            ]
        };

        // Données pour le graphique par type avec gradient
        const typeData = {
            labels: [{% for type, count in stats.parType %}'{{ type }}',{% endfor %}],
            datasets: [{
                data: [{% for type, count in stats.parType %}{{ count }},{% endfor %}],
                backgroundColor: [
                    'rgba(78, 115, 223, 0.8)',
                    'rgba(28, 200, 138, 0.8)',
                    'rgba(246, 194, 62, 0.8)',
                    'rgba(231, 74, 59, 0.8)'
                ],
                borderWidth: 2,
                borderColor: '#ffffff'
            }]
        };

        // Données pour le graphique de statut
        const statusData = {
            labels: ['En cours', 'Résolues', 'Rejetées'],
            datasets: [{
                data: [{{ stats.enCours }}, {{ stats.resolues }}, {{ stats.rejetees }}],
                backgroundColor: [
                    colors.warning,
                    colors.success,
                    colors.danger
                ],
                borderWidth: 2,
                borderColor: '#ffffff'
            }]
        };

        window.addEventListener('load', function() {
            // Graphique combiné
            new Chart(document.getElementById('combinedChart'), {
                data: combinedData,
                options: {
                    ...commonOptions,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Évolution et Tendance des Réclamations',
                            font: { size: 16, weight: 'bold' }
                        },
                        legend: {
                            position: 'top'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                drawBorder: false,
                                color: 'rgba(0, 0, 0, 0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });

            // Graphique par type
            new Chart(document.getElementById('typeChart'), {
                type: 'doughnut',
                data: typeData,
                options: {
                    ...commonOptions,
                    cutout: '60%',
                    plugins: {
                        title: {
                            display: true,
                            text: 'Répartition par Type',
                            font: { size: 16, weight: 'bold' }
                        }
                    }
                }
            });

            // Graphique de statut
            new Chart(document.getElementById('statusChart'), {
                type: 'polarArea',
                data: statusData,
                options: {
                    ...commonOptions,
                    plugins: {
                        title: {
                            display: true,
                            text: 'État des Réclamations',
                            font: { size: 16, weight: 'bold' }
                        }
                    },
                    scales: {
                        r: {
                            ticks: {
                                display: false
                            }
                        }
                    }
                }
            });

            // Numérotation des pages
            let pageNumbers = document.querySelectorAll('.current-page');
            let currentPage = 1;
            pageNumbers.forEach(function(pageNumber) {
                pageNumber.textContent = currentPage++;
            });
        });
    </script>
</body>
</html>
